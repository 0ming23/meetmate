import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class LoginScreen extends JFrame {
    private JTextField idField;
    private JPasswordField passwordField;
    private JLabel statusLabel;

    public LoginScreen() {
        // 초기 설정
        setTitle("로그인");
        setSize(300, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // 로그인 화면 구성
        JPanel panel = new JPanel(new GridLayout(3, 2));
        JLabel idLabel = new JLabel("ID:");
        idField = new JTextField();
        JLabel passwordLabel = new JLabel("Password:");
        passwordField = new JPasswordField();
        JButton loginButton = new JButton("Login");
        JButton signUpButton = new JButton("Sign Up");
        statusLabel = new JLabel("", SwingConstants.CENTER);

        panel.add(idLabel);
        panel.add(idField);
        panel.add(passwordLabel);
        panel.add(passwordField);
        panel.add(loginButton);
        panel.add(signUpButton);

        add(panel, BorderLayout.CENTER);
        add(statusLabel, BorderLayout.SOUTH);

        // 로그인 버튼 이벤트 리스너
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String userId = idField.getText();
                String userPassword = new String(passwordField.getPassword());

                if (userId.isEmpty() || userPassword.isEmpty()) {
                    statusLabel.setText("ID와 비밀번호를 모두 입력해주세요.");
                } else if (authenticateUser(userId, userPassword)) {
                    statusLabel.setText("로그인 성공");
                    new MainScreen(userId);  // userId 전달
                    dispose();
                } else {
                    statusLabel.setText("로그인 실패: ID 또는 비밀번호가 잘못되었습니다.");
                }
            }
        });

        // 회원가입 버튼 이벤트 리스너
        signUpButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // 회원가입 화면으로 이동
                new RegisterScreen();
                dispose();
            }
        });

        setVisible(true);
    }

    private boolean authenticateUser(String userId, String userPassword) {
        Connection connection = DatabaseConnection.getConnection();
        String query = "SELECT * FROM meetmate_user WHERE user_id = ? AND user_password = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setString(1, userId);
            preparedStatement.setString(2, userPassword);
            ResultSet resultSet = preparedStatement.executeQuery();
            return resultSet.next();
        } catch (SQLException e) {
            e.printStackTrace();
            statusLabel.setText("DB 오류: " + e.getMessage());
            return false;
        } finally {
            try {
                if (connection != null && !connection.isClosed()) {
                    connection.close();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        new LoginScreen();
    }
}
