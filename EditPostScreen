import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class EditPostScreen extends JFrame {
    private JTextField titleField;
    private JTextArea contentArea;
    private String userId;
    private int postId;

    public EditPostScreen(String userId, String postIdStr) {
        this.userId = userId;
        this.postId = Integer.parseInt(postIdStr);

        setTitle("Edit Post");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());

        titleField = new JTextField();
        contentArea = new JTextArea();

        JButton updateButton = new JButton("수정");
        updateButton.addActionListener(e -> updatePost());

        JButton deleteButton = new JButton("삭제");
        deleteButton.addActionListener(e -> deletePost());

        panel.add(titleField, BorderLayout.NORTH);
        panel.add(new JScrollPane(contentArea), BorderLayout.CENTER);

        JPanel buttonPanel = new JPanel();
        buttonPanel.add(updateButton);
        buttonPanel.add(deleteButton);

        panel.add(buttonPanel, BorderLayout.SOUTH);

        add(panel);
        setVisible(true);

        loadPost();
    }

    private void loadPost() {
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            conn = DatabaseConnection.getConnection();
            String query = "SELECT title, content FROM posts WHERE id = ?";
            stmt = conn.prepareStatement(query);
            stmt.setInt(1, postId);
            rs = stmt.executeQuery();
            if (rs.next()) {
                titleField.setText(rs.getString("title"));
                contentArea.setText(rs.getString("content"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private void updatePost() {
        String title = titleField.getText();
        String content = contentArea.getText();

        if (title.isEmpty() || content.isEmpty()) {
            JOptionPane.showMessageDialog(this, "제목과 내용을 입력하세요.");
            return;
        }

        Connection conn = null;
        PreparedStatement stmt = null;
        try {
            conn = DatabaseConnection.getConnection();
            String query = "UPDATE posts SET title = ?, content = ? WHERE id = ?";
            stmt = conn.prepareStatement(query);
            stmt.setString(1, title);
            stmt.setString(2, content);
            stmt.setInt(3, postId);
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "포스트가 수정되었습니다.");
            dispose();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "포스트 수정에 실패했습니다.");
        } finally {
            try {
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private void deletePost() {
        int confirmation = JOptionPane.showConfirmDialog(this, "정말로 이 포스트를 삭제하시겠습니까?", "포스트 삭제", JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.YES_OPTION) {
            Connection conn = null;
            PreparedStatement stmt = null;
            try {
                conn = DatabaseConnection.getConnection();
                String query = "DELETE FROM posts WHERE id = ?";
                stmt = conn.prepareStatement(query);
                stmt.setInt(1, postId);
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "포스트가 삭제되었습니다.");
                dispose();
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "포스트 삭제에 실패했습니다.");
            } finally {
                try {
                    if (stmt != null) stmt.close();
                    if (conn != null) conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
